

1--Selezionare tutte le software house americane (3)

	SELECT *
	from software_houses sh 
	WHERE sh.country = 'United States';


2--Selezionare tutti i giocatori della città di 'Rogahnland' (2)

	SELECT *
	FROM players p 
	WHERE p.city = 'Rogahnland';

3--Selezionare tutti i giocatori il cui nome finisce per "a" (220)

	SELECT *
	FROM players p 
	WHERE p.name LIKE '%a';


4--Selezionare tutte le recensioni scritte dal giocatore con ID = 800 (11)

	SELECT *
	FROM reviews r 
	WHERE r.player_id = '800';

5--Contare quanti tornei ci sono stati nell anno 2015 (9)

	SELECT COUNT(*) 
	FROM tournaments t 
	WHERE T.`year` = '2015';

6--Selezionare tutti i premi che contengono nella descrizione la parola 'facere' (2)

	SELECT *
	FROM awards a 
	WHERE a.description LIKE '%facere%';

7--Selezionare tutti i videogame che hanno la categoria 2 (FPS) o 6 (RPG), mostrandoli una sola volta (del videogioco vogliamo solo l ID (287)

	SELECT DISTINCT cv.videogame_id
	FROM category_videogame cv
	WHERE cv.category_id = '2' OR cv.category_id = '6';

8--Selezionare tutte le recensioni con voto compreso tra 2 e 4 (2947)

	SELECT *
	FROM reviews r 
	WHERE r.rating BETWEEN '2' AND '4';

9--Selezionare tutti i dati dei videogiochi rilasciati nell anno 2020 (46)

	SELECT *
	FROM videogames v 
	WHERE YEAR(v.release_date) = '2020';

10--Selezionare gli id dei videogame che hanno ricevuto almeno una recensione da 5 stelle, mostrandoli una sola volta (443)

	SELECT DISTINCT r.videogame_id 
	FROM reviews r 
	WHERE r.rating >= '5';


11--Selezionare il numero e la media delle recensioni per il videogioco con ID = 412 (review number = 12, avg_rating = 3.16 circa)

	SELECT COUNT(id) as numero, AVG(rating) as media
	FROM reviews
	WHERE videogame_id = '412';


12--Selezionare il numero di videogame che la software house con ID = 1 ha rilasciato nel 2018 (13)

	SELECT COUNT(v.id) as numero 
	FROM videogames v 
	WHERE v.software_house_id = '1' AND YEAR(v.release_date) = '2018';




		GROUP BY


1- Contare quante software house ci sono per ogni paese (3)

	SELECT COUNT(sh.id) as num_sh
	FROM software_houses sh 
	GROUP BY sh.country;


2--Contare quante recensioni ha ricevuto ogni videogioco (del videogioco vogliamo solo l ID) (500)

	SELECT r.videogame_id as videogame_id, COUNT(r.id) 
	FROM reviews r 
	GROUP BY r.videogame_id;


3--Contare quanti videogiochi hanno ciascuna classificazione PEGI (della classificazione PEGI vogliamo solo l ID) (13)

	SELECT COUNT(plv.videogame_id) as n_videogames, plv.pegi_label_id as PEGI_id
	FROM pegi_label_videogame plv 
	WHERE plv.pegi_label_id IS NOT NULL 
	GROUP BY plv.pegi_label_id;


4--Mostrare il numero di videogiochi rilasciati ogni anno (11)

	SELECT COUNT(v.id) as release_for_year 
	FROM videogames v 
	GROUP BY YEAR(v.release_date); 



5--Contare quanti videogiochi sono disponbili per ciascun device (del device vogliamo solo l ID) (7)

	SELECT COUNT(dv.id) as n_videogames, dv.device_id as device_id
	FROM device_videogame dv 
	GROUP BY dv.device_id;


6--Ordinare i videogame in base alla media delle recensioni (del videogioco vogliamo solo l ID) (500)

	SELECT videogame_id, AVG(rating) AS average_rating
	FROM reviews
	GROUP BY videogame_id
	ORDER BY average_rating DESC;




		JOIN



1--Selezionare i dati di tutti giocatori che hanno scritto almeno una recensione, mostrandoli una sola volta (996)

	SELECT DISTINCT p.*
	FROM players p
	INNER JOIN reviews r 
	ON p.id = r.player_id;


2--Sezionare tutti i videogame dei tornei tenuti nel 2016, mostrandoli una sola volta (226)

	SELECT DISTINCT v.*
	FROM videogames v 

	INNER JOIN tournament_videogame tv 
	ON v.id = tv.videogame_id

	INNER JOIN tournaments t 
	ON t.id = tv.tournament_id

	WHERE t.year = '2016';


3--Mostrare le categorie di ogni videogioco (1718)

	SELECT c.name as category_name, v.name as videogame_name
	FROM videogames v 

	INNER JOIN category_videogame cv 
	ON v.id = cv.videogame_id 

	INNER JOIN categories c 
	ON c.id = cv.category_id



4--Selezionare i dati di tutte le software house che hanno rilasciato almeno un gioco dopo il 2020, mostrandoli una sola volta (6)

	SELECT DISTINCT sh.*
	FROM software_houses sh 

	INNER JOIN videogames v 
	ON v.software_house_id  = sh.id

	WHERE v.release_date > '2020-01-01';


5--Selezionare i premi ricevuti da ogni software house per i videogiochi che ha prodotto (55)

	SELECT a.name as award_name, av.videogame_id as videogame_id
	FROM award_videogame av

	JOIN awards a 
	ON av.award_id = a.id



6--Selezionare categorie e classificazioni PEGI dei videogiochi che hanno ricevuto recensioni da 4 e 5 stelle, mostrandole una sola volta (3363)

	SELECT DISTINCT c.name AS category_name, pl.name AS pegi_name, v.name AS videogame_name
	FROM videogames v 

	JOIN category_videogame cv 
	ON cv.videogame_id = v.id

	JOIN categories c 
	ON c.id = cv.category_id

	JOIN pegi_label_videogame plv 
	ON plv.videogame_id = v.id

	JOIN pegi_labels pl 
	ON pl.id = plv.pegi_label_id

	JOIN reviews r 
	ON r.videogame_id = v.id

	WHERE r.rating = 4 OR r.rating = 5;


7--Selezionare quali giochi erano presenti nei tornei nei quali hanno partecipato i giocatori il cui nome inizia per 'S' (474)

	SELECT DISTINCT v.id 
	FROM videogames v

	JOIN tournament_videogame tv 
	ON tv.videogame_id = v.id

	JOIN tournaments t 
	ON t.id = tv.tournament_id

	JOIN player_tournament pt 
	ON pt.tournament_id = t.id

	OIN players p 
	ON p.id = pt.player_id

	WHERE p.name LIKE 'S%'


8--Selezionare le città in cui è stato giocato il gioco dell anno del 2018 (36)

	SELECT DISTINCT t.city
	FROM videogames v 

	JOIN award_videogame av 
	ON v.id = av.videogame_id 

	JOIN tournament_videogame tv 
	ON v.id = tv.videogame_id 

	JOIN tournaments t 
	ON tv.tournament_id = t.id 

	WHERE av.year = '2018';


9--Selezionare i giocatori che hanno giocato al gioco più atteso del 2018 in un torneo del 2019 (3306)

	SELECT  p.*
	FROM players p 

	JOIN player_tournament pt 
	ON pt.player_id = p.id 

	JOIN tournaments t 
	ON t.id =pt.tournament_id

	JOIN tournament_videogame tv 
	ON tv.tournament_id = t.id

	JOIN videogames v 
	ON v.id = tv.videogame_id 

	JOIN award_videogame av 
	ON av.videogame_id = v.id 

	JOIN  awards a 
	ON a.id = av.award_id

	WHERE  av.year = '2018' and av.award_id = 5 and t.year = 2019;

